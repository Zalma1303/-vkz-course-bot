# handlers/start.py

from aiogram import Router, F
from aiogram.types import (
    Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
)
from config import COURSES, MBANK_PHONE, QR_PATH

router = Router()

# üîê –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
user_selected_course = {}

# üß† –õ–æ–≥–æ—Ç–∏–ø –∏ –±—Ä–µ–Ω–¥
LOGO = "üß† –§–æ–Ω–¥ ¬´–í–º–µ—Å—Ç–µ –∫ –ó–¥–æ—Ä–æ–≤—å—é¬ª | VKZ"
DISCLAIMER = (
    "‚ö†Ô∏è –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n"
    "–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –±–µ–∑ –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –§–æ–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–æ."
)

@router.message(F.text == "/start")
async def start_handler(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è", callback_data="course:–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è")],
        [InlineKeyboardButton(text="–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è", callback_data="course:–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è")],
        [InlineKeyboardButton(text="–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", callback_data="course:–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")]
    ])

    await message.answer(
        f"{LOGO}\n\n"
        "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ–±—É—á–∞—é—â–∏–π –±–æ—Ç —Ñ–æ–Ω–¥–∞!</b>\n"
        "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø –∫ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –∫—É—Ä—Å–∞–º, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∑–¥–æ—Ä–æ–≤—å—è, —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫—É—Ä—Å –Ω–∏–∂–µ üëá",
        reply_markup=kb
    )


@router.callback_query(F.data.startswith("course:"))
async def choose_language(callback: CallbackQuery):
    course_name = callback.data.split(":")[1]

    mapping = {
        "–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è": "ava",
        "–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è": "defekt",
        "–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è": "sensor"
    }

    course_code = mapping[course_name]

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data=f"lang:{course_code}:ru"),
            InlineKeyboardButton(text="üá∞üá¨ –ö—ã—Ä–≥—ã–∑—Å–∫–∏–π", callback_data=f"lang:{course_code}:kg")
        ]
    ])

    await callback.message.edit_text(
        f"üìò <b>{course_name}</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è:", reply_markup=kb
    )
    await callback.answer()


@router.callback_query(F.data.startswith("lang:"))
async def show_payment_info(callback: CallbackQuery):
    _, course_code, lang_code = callback.data.split(":")

    course_reverse = {
        "ava": "–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è",
        "defekt": "–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è",
        "sensor": "–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
    }

    lang_reverse = {
        "ru": "–†—É—Å—Å–∫–∏–π",
        "kg": "–ö—ã—Ä–≥—ã–∑—Å–∫–∏–π"
    }

    course_name = course_reverse[course_code]
    lang = lang_reverse[lang_code]
    course_info = COURSES[course_name][lang]
    price = course_info["price"]

    user_selected_course[callback.from_user.id] = (course_name, lang)

    qr_image = FSInputFile(QR_PATH)

    await callback.message.answer_photo(
        qr_image,
        caption=(
            f"üìò <b>{course_name} ({lang})</b>\n\n"
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞: <b>{price} —Å–æ–º</b>\n"
            f"üì± –û–ø–ª–∞—Ç–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä M–ë–∞–Ω–∫: <code>{MBANK_PHONE}</code>\n\n"
            "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –≤ —ç—Ç–æ—Ç —á–∞—Ç. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –ø–ª–∞—Ç—ë–∂ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –¥–æ—Å—Ç—É–ø.\n\n"
            f"{DISCLAIMER}"
        )
    )
    await callback.answer()