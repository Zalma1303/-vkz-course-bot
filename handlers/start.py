from aiogram import Router, F
from aiogram.types import (
    Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
)
from config import COURSES, MBANK_PHONE, QR_PATH

router = Router()

# üîê –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
user_selected_course = {}

# üß† –õ–æ–≥–æ—Ç–∏–ø –∏ –±—Ä–µ–Ω–¥
LOGO = "üß† –§–æ–Ω–¥ ¬´–í–º–µ—Å—Ç–µ –∫ –ó–¥–æ—Ä–æ–≤—å—é¬ª | VKZ"
DISCLAIMER = (
    "‚ö†Ô∏è –í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n"
    "–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –±–µ–∑ –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –§–æ–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–æ."
)


@router.message(F.text == "/start")
async def start_handler(message: Message):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîΩ –í—ã–±—Ä–∞—Ç—å –∫—É—Ä—Å", callback_data="select_course")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –û —Ñ–æ–Ω–¥–µ", url="https://www.osoo.kg/inn/02104201110143/")],
        [InlineKeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –ê–ª–º–∞–∑ (WhatsApp)", url="https://wa.me/996557555234")]
    ])

    await message.answer(
        f"{LOGO}\n\n"
        "<b>–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ –≤—Å–µ—Ö, –∫—Ç–æ –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ –∏ –∑–¥–æ—Ä–æ–≤—å–µ –¥–µ—Ç–µ–π.</b>\n\n"
        "üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>\n"
        "‚Ä¢ –ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è\n"
        "‚Ä¢ –î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è\n"
        "‚Ä¢ –°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è\n\n"
        "üìç –ù–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∫—ã—Ä–≥—ã–∑—Å–∫–æ–º —è–∑—ã–∫–∞—Ö\n"
        "üìç –û–¥–æ–±—Ä–µ–Ω–æ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ–º –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∫—É–ª—å—Ç—É—Ä—ã –ö–†\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ üëá",
        reply_markup=kb
    )


@router.callback_query(F.data == "select_course")
async def show_courses(callback: CallbackQuery):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è", callback_data="course:–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è")],
        [InlineKeyboardButton(text="–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è", callback_data="course:–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è")],
        [InlineKeyboardButton(text="–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", callback_data="course:–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è")]
    ])
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫—É—Ä—Å:", reply_markup=kb)
    await callback.answer()


@router.callback_query(F.data.startswith("course:"))
async def choose_language(callback: CallbackQuery):
    course_name = callback.data.split(":")[1]

    mapping = {
        "–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è": "ava",
        "–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è": "defekt",
        "–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è": "sensor"
    }

    course_code = mapping[course_name]

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data=f"lang:{course_code}:ru"),
            InlineKeyboardButton(text="üá∞üá¨ –ö—ã—Ä–≥—ã–∑—Å–∫–∏–π", callback_data=f"lang:{course_code}:kg")
        ]
    ])

    await callback.message.edit_text(
        f"üìò <b>{course_name}</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è:", reply_markup=kb
    )
    await callback.answer()


@router.callback_query(F.data.startswith("lang:"))
async def show_payment_info(callback: CallbackQuery):
    _, course_code, lang_code = callback.data.split(":")

    course_reverse = {
        "ava": "–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è",
        "defekt": "–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è",
        "sensor": "–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"
    }

    lang_reverse = {
        "ru": "–†—É—Å—Å–∫–∏–π",
        "kg": "–ö—ã—Ä–≥—ã–∑—Å–∫–∏–π"
    }

    course_name = course_reverse[course_code]
    lang = lang_reverse[lang_code]

    course_info = COURSES[course_name][lang]
    price_kgs = course_info["price"]

    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã –≤ –¥—Ä—É–≥–∏—Ö –≤–∞–ª—é—Ç–∞—Ö
    price_rub = {
        "–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è": 3200,
        "–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è": 2300,
        "–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è": 2800
    }[course_name]

    price_usd = {
        "–ê–í–ê-—Ç–µ—Ä–∞–ø–∏—è": 40,
        "–î–µ—Ñ–µ–∫—Ç–æ–ª–æ–≥–∏—è": 30,
        "–°–µ–Ω—Å–æ—Ä–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è": 35
    }[course_name]

    user_selected_course[callback.from_user.id] = (course_name, lang)

    qr_image = FSInputFile(QR_PATH)

    caption = (
        f"üìò <b>{course_name} ({lang})</b>\n\n"
        f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞:\n"
        f"‚Ä¢ <b>{price_kgs} —Å–æ–º</b> (–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω)\n"
        f"‚Ä¢ <b>{price_rub} ‚ÇΩ</b> (–†–æ—Å—Å–∏—è)\n"
        f"‚Ä¢ <b>${price_usd}</b> (–°–®–ê –∏ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã)\n\n"
        "üåç <b>–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å:</b>\n"
        "‚û§ –î–ª—è –†–æ—Å—Å–∏–∏ ‚Äî –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ –ÆMoney\n"
        "‚û§ –î–ª—è –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–∞ ‚Äî M–ë–∞–Ω–∫ (QR –Ω–∏–∂–µ)\n"
        "‚û§ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã ‚Äî –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ–∫ (—Ñ–æ—Ç–æ / —Å–∫—Ä–∏–Ω)\n\n"
        f"{DISCLAIMER}"
    )

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üá∑üá∫ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –ÆMoney", url="https://yoomoney.ru/to/4100119099824929")],
        [InlineKeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: –ê–ª–º–∞–∑ (WhatsApp)", url="https://wa.me/996557555234")]
    ])

    await callback.message.answer_photo(
        qr_image,
        caption=caption,
        reply_markup=kb
    )
    await callback.answer()